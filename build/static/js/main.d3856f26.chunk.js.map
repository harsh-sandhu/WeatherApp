{"version":3,"sources":["TheComponents/WeatherApp.js","App.js","reportWebVitals.js","index.js"],"names":["Myapp","useState","city","setCity","country","setCountry","weather","setWeather","search","setSearch","dark","setDark","useEffect","a","url","fetch","response","json","jsonResponse","main","sys","fetchApi1","className","type","placeholder","onChange","event","target","value","temp","temp_min","temp_max","description","pressure","humidity","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAyDeA,EAvDH,WAAK,IAAD,EACQC,mBAAS,MADjB,mBACNC,EADM,KACDC,EADC,OAEcF,mBAAS,UAFvB,mBAENG,EAFM,KAEEC,EAFF,OAGcJ,mBAAS,UAHvB,mBAGNK,EAHM,KAGEC,EAHF,OAIYN,mBAAS,UAJrB,mBAINO,EAJM,KAICC,EAJD,OAKQR,oBAAS,GALjB,mBAKNS,EALM,KAKDC,EALC,KAiBZ,OAXAC,qBAAU,YACS,uCAAC,gCAAAC,EAAA,6DACNC,EADM,4DACmDN,EADnD,iEAEUO,MAAMD,GAFhB,cAENE,EAFM,gBAGaA,EAASC,OAHtB,OAGNC,EAHM,OAIZf,EAAQe,EAAaC,MACrBd,EAAWa,EAAaE,KACxBb,EAAWW,EAAaZ,SANZ,4CAAD,qDAQfe,KACF,CAACb,IAEC,sBAAKc,UAAWZ,EAAK,WAAW,aAAhC,UACI,oBAAIY,UAAU,YAAd,qBACA,qBAAKA,UAAU,MAAf,SAAqB,mBAAGA,UAAWZ,EAAK,mBAAmB,wBAC3D,sBAAKY,UAAWZ,EAAK,UAAU,MAA/B,UACI,uBAAOa,KAAK,SAASD,UAAWZ,EAAK,aAAa,aAAcc,YAAY,SAASC,SAAU,SAACC,GAASjB,EAAUiB,EAAMC,OAAOC,UAChI,sBAAKN,UAAU,aAAf,UACA,mBAAGA,UAAWZ,EAAK,yBAAyB,4BAC5C,wBAAOY,UAAU,SAAjB,UACA,uBAAOA,UAAU,cAAcC,KAAK,WAAWE,SAAU,kBAAId,GAASD,MACtE,sBAAMY,UAAU,oBAEhB,mBAAGA,UAAWZ,EAAK,wBAAwB,8BAEzCR,GAAOE,GAAUE,EAGf,sBAAKgB,UAAU,iBAAf,UACA,sBAAKA,UAAU,OAAf,UACA,qBAAIA,UAAU,WAAd,UAAyB,mBAAGA,UAAU,uBAA0Bd,EAAhE,KAA0EJ,EAAQA,WAClF,qBAAIkB,UAAU,OAAd,UAAqB,mBAAGA,UAAU,2BAAlC,IAAiEpB,EAAK2B,KAAtE,WACA,qBAAIP,UAAU,UAAd,kBAA8BpB,EAAK4B,SAAnC,WACA,qBAAIR,UAAU,UAAd,kBAA8BpB,EAAK6B,SAAnC,cAEA,sBAAKT,UAAU,QAAf,UACI,oBAAIA,UAAU,MAAd,SAAqBhB,EAAQ,GAAGa,OAChC,oBAAIG,UAAU,OAAd,SAAsBhB,EAAQ,GAAG0B,cACjC,qBAAIV,UAAU,WAAd,uBAAoCpB,EAAK+B,SAAzC,SACA,qBAAIX,UAAU,WAAd,uBAAoCpB,EAAKgC,kBAb7C,oBAAIZ,UAAU,QAAd,kCAkBR,qBAAKA,UAAU,SACf,qBAAKA,UAAU,a,MC7CZa,MANf,WACE,OACE,cAAC,EAAD,KCQWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d3856f26.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./styles/style.css\";\r\nconst Myapp=()=>{\r\n    const[city,setCity]=useState(null);\r\n    const[country,setCountry]=useState(\"Abohar\");\r\n    const[weather,setWeather]=useState(\"Abohar\");\r\n    const[search,setSearch]=useState(\"Abohar\");\r\n    const[dark,setDark]=useState(false);\r\n    useEffect(()=>{\r\n        const fetchApi1=async()=>{\r\n            const url=`https://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=e36cd3cc293a484f8a379f69662b46ef`;\r\n            const response= await fetch(url);\r\n            const jsonResponse=await response.json();\r\n            setCity(jsonResponse.main);\r\n            setCountry(jsonResponse.sys);\r\n            setWeather(jsonResponse.weather);\r\n        }\r\n        fetchApi1();\r\n    },[search])\r\n    return(\r\n        <div className={dark?\"backdark\":\"background\"}>\r\n            <h1 className=\"box-title\">Weather</h1>\r\n            <div className=\"sun\"><i className={dark?\"fas fa-sun sunin\":\"fas fa-sun sunout\"}></i></div>\r\n            <div className={dark?\"boxdark\":\"box\"}>\r\n                <input type=\"search\" className={dark?\"input-dark\":\"input-city\"} placeholder=\"Abohar\" onChange={(event)=>{setSearch(event.target.value)}}/>\r\n                <div className=\"switchdark\">\r\n                <i className={dark?\"fas fa-moon dark-icons\":\"fas fa-moon light-icons\"}></i>\r\n                <label className=\"switch\">\r\n                <input className=\"switchcheck\" type=\"checkbox\" onChange={()=>setDark(!dark)}/>\r\n                <span className=\"slider round\"></span>\r\n                </label>\r\n                <i className={dark?\"fas fa-sun dark-icons\":\"fas fa-sun light-icons\"}></i>\r\n                </div>\r\n                {!city||!country||!weather?(\r\n                    <h1 className=\"error\">No Data Available</h1>\r\n                ):(\r\n                    <div className=\"flex-container\">\r\n                    <div className=\"info\">\r\n                    <h1 className=\"location\"><i className=\"fas fa-street-view\"></i>{search}, {country.country}</h1>\r\n                    <h1 className=\"temp\"><i className=\"fas fa-temperature-low\"></i> {city.temp}°C</h1>\r\n                    <h6 className=\"tempmin\">Min: {city.temp_min}°C</h6>\r\n                    <h6 className=\"tempmin\">Max: {city.temp_max}°C</h6>\r\n                    </div>\r\n                    <div className=\"info2\">\r\n                        <h3 className=\"sky\">{weather[0].main}</h3>\r\n                        <h3 className=\"sky2\">{weather[0].description}</h3>\r\n                        <h3 className=\"pressure\">Pressure: {city.pressure} Pa</h3>\r\n                        <h3 className=\"humidity\">Humidity: {city.humidity}</h3>\r\n                    </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className=\"wave\"></div>\r\n            <div className=\"wave\"></div>\r\n        </div>\r\n    )\r\n}\r\nexport default Myapp;","import Myapp from \"./TheComponents/WeatherApp\";\nimport './App.css';\nfunction App() {\n  return (\n    <Myapp />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}